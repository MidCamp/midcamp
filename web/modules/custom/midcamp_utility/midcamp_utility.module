<?php

/**
 * @file
 * Contains midcamp_utility.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_help().
 */
function midcamp_utility_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the midcamp_utility module.
    case 'help.page.midcamp_utility':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Misc modifications and helpers') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_views_pre_view().
 */
function midcamp_utility_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  /*
   * Ensure the Event Venue, Sponsors views get the correct argument when contextual filters not available.
   * Set `$event_default` to the current active event term ID.
   */
  $event_default = '97';
  $event_views = ['event_venue', 'event_sponsors'];
  if (in_array($view->id(), $event_views)) {
    // Determine what type of page we are on.
    $current_route = \Drupal::routeMatch();
    // Views page condition where args may not be present.
    if ($current_route->getParameter('view_id')) {
      // Check the first path part for a value matching an Event term alias.
      $current_uri = \Drupal::request()->getRequestUri();
      $parts = explode('/', $current_uri);
      // Get the term ID from the path
      $term_path = \Drupal::service('path.alias_manager')->getPathByAlias('/' . $parts[1]);
      $term_args = explode('/', $term_path);

      // If we've found a taxonomy term path pass the term ID.
      if ($term_args[1] == 'taxonomy') {
        $tid = end($term_args);
        $view->setArguments([$tid]);
      } else {
        // Otherwise default to the 2019 tid.
        $view->setArguments([$event_default]);
      }
      return;
    }
    // Node condition where `field_event` values are not present.
    if ($current_route->getParameter('node')) {
      $node = $current_route->getParameter('node');
      if ($node->hasField('field_event') && $node->get('field_event')->isEmpty()) {
        $view->setArguments([$event_default]);
        return;
      }
    }
    // Taxonomy condition for non-event terms.
    if ($current_route->getParameter('taxonomy_term')) {
      $term = $current_route->getParameter('taxonomy_term');
      if ($term->bundle() != 'event') {
        $view->setArguments([$event_default]);
        return;
      }
    }
  }
}
